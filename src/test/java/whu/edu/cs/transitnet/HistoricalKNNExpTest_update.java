package whu.edu.cs.transitnet;

import org.junit.Test;
import org.junit.runner.RunWith;
import org.mybatis.spring.annotation.MapperScan;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.boot.test.context.SpringBootTest;
import org.springframework.test.context.junit4.SpringRunner;
import whu.edu.cs.transitnet.param.QueryKnnHisParam;
import whu.edu.cs.transitnet.service.HistoricalKNNExpService;
import whu.edu.cs.transitnet.service.RealtimeKNNExpService;

import java.io.IOException;
import java.text.ParseException;
import java.util.ArrayList;
import java.util.List;

@RunWith(SpringRunner.class)
@SpringBootTest
@MapperScan("whu.edu.cs.transitnet.*")
public class HistoricalKNNExpTest_update {
    @Autowired
    HistoricalKNNExpService historicalKNNExpService;

    @Test
    public void kNNExpTest() throws InterruptedException, IOException, ParseException {
        int k = 10;
        double []ps={
                40.70779,	-73.79636,
                40.70779,	-73.79636,
                40.70779,	-73.79636,
                40.70795,	-73.79646,
                40.707924,	-73.79644,
                40.707977,	-73.79648,
                40.707924,	-73.79644,
                40.707977,	-73.79648,
                40.70795,	-73.79646,
                40.707863,	-73.79593,
                40.708115,	-73.79657,
                40.708385,	-73.796745,
                40.708984,	-73.797134,
                40.70882,	-73.797035,
                40.70937,	-73.796906,
                40.709526,	-73.79634,
                40.710175,	-73.79429,
                40.710835,	-73.792694,
                40.71144,	-73.791016,
                40.711998,	-73.78852,
                40.71178,	-73.78742,
                40.71185,	-73.78703,
                40.712383,	-73.78488,
                40.71254,	-73.7842,
                40.713127,	-73.78193,
                40.71385,	-73.778946,
                40.714115,	-73.77768,
                40.714275,	-73.776985,
                40.71443,	-73.77634,
                40.71503,	-73.7739,
                40.715458,	-73.772545,
                40.71604,	-73.770874,
                40.716732,	-73.76889,
                40.716995,	-73.768135,
                40.717457,	-73.76698,
                40.719147,	-73.763916,
                40.720417,	-73.76091,
                40.720695,	-73.76016,
                40.721344,	-73.75965,
                40.72169,	-73.759926,
                40.721664,	-73.7599,
                40.72204,	-73.76018,
                40.72255,	-73.760765,
                40.723705,	-73.7628,
                40.72515,	-73.76526,
                40.729893,	-73.768654,
                40.732517,	-73.77055,
                40.73481,	-73.77204,
                40.736053,	-73.77267,
                40.739532,	-73.77397,
                40.74301,	-73.775505,
                40.743217,	-73.7756,
                40.74373,	-73.77585,
                40.745556,	-73.77673,
                40.748074,	-73.77795,
                40.748947,	-73.77836,
                40.751427,	-73.779526,
                40.752617,	-73.78009,
                40.75445,	-73.78137,
                40.75655,	-73.78265,
                40.75726,	-73.78302,
                40.757824,	-73.78329,
                40.75829,	-73.78354,
                40.758102,	-73.78344,
                40.758648,	-73.78374,
                40.760956,	-73.784904,
                40.762432,	-73.78532,
                40.763084,	-73.78584,
                40.763466,	-73.78654,
                40.764874,	-73.78863,
                40.76558,	-73.789154,
                40.765717,	-73.78925,
                40.766605,	-73.78988,
                40.767277,	-73.790375,
                40.76817,	-73.79115,
                40.76842,	-73.791374,
                40.768974,	-73.79185,
                40.770363,	-73.79308,
                40.770363,	-73.79308,
                40.771576,	-73.79414,
                40.773563,	-73.79654,
                40.77576,	-73.79898,
                40.777267,	-73.800316,
                40.779594,	-73.801994,
                40.780136,	-73.802345,
                40.78112,	-73.80301,
                40.783165,	-73.80434,
                40.78379,	-73.80473,
                40.78414,	-73.83638,
                40.78562,	-73.8059,
                40.78684,	-73.80758,
                40.784626,	-73.83763,
                40.78692,	-73.808426,
                40.78431,	-73.83636,
                40.78714,	-73.81048,
                40.78725,	-73.811325,
                40.784195,	-73.83637,
                40.787216,	-73.81108,
                40.78414,	-73.83638,
                40.787518,	-73.81359,
                40.784084,	-73.83639,
                40.78778,	-73.81482,
                40.78806,	-73.8171,
                40.78466,	-73.83732,
                40.788074,	-73.81705,
                40.784668,	-73.83754,
                40.787834,	-73.81803,
                40.78431,	-73.83636,
                40.787876,	-73.817856,
                40.787285,	-73.820366,
                40.784657,	-73.83724,
                40.78701,	-73.82159,
                40.784084,	-73.83639,
                40.785786,	-73.821884,
                40.784084,	-73.83639,
                40.784393,	-73.821365,
                40.78168,	-73.82265,
                40.78431,	-73.83636,
                40.7817,    -73.82353,
                40.784664,	-73.837395,
                40.78168,	-73.82272,
                40.784657,	-73.83724,
                40.781704,	-73.82435,
                40.784653,	-73.8371,
                40.781693,	-73.82516,
                40.784653,	-73.83717,
                40.781662,	-73.82849,
                40.78465,	-73.83702,
                40.781643,	-73.83219,
                40.784626,	-73.83763,
                40.781643,	-73.83381,
                40.78431,	-73.83636,
                40.781643,	-73.83645,
                40.78464,	-73.836876,
                40.78307,	-73.8377,
                40.78446,	-73.83764,
                40.784657,	-73.83724,
                40.784645,	-73.83695,
                40.783806,	-73.836426
        };
        String []ts={
                "2023-05-20 06:57:47",
                "2023-05-20 06:58:18",
                "2023-05-20 06:58:48",
                "2023-05-20 06:59:19",
                "2023-05-20 06:59:49",
                "2023-05-20 07:00:20",
                "2023-05-20 07:00:50",
                "2023-05-20 07:01:51",
                "2023-05-20 07:02:22",
                "2023-05-20 07:03:23",
                "2023-05-20 07:03:53",
                "2023-05-20 07:04:23",
                "2023-05-20 07:05:24",
                "2023-05-20 07:05:55",
                "2023-05-20 07:06:25",
                "2023-05-20 07:06:56",
                "2023-05-20 07:07:57",
                "2023-05-20 07:08:27",
                "2023-05-20 07:08:57",
                "2023-05-20 07:09:28",
                "2023-05-20 07:09:58",
                "2023-05-20 07:10:29",
                "2023-05-20 07:11:00",
                "2023-05-20 07:11:30",
                "2023-05-20 07:12:01",
                "2023-05-20 07:12:31",
                "2023-05-20 07:13:02",
                "2023-05-20 07:13:32",
                "2023-05-20 07:14:03",
                "2023-05-20 07:14:34",
                "2023-05-20 07:15:04",
                "2023-05-20 07:15:35",
                "2023-05-20 07:16:06",
                "2023-05-20 07:16:36",
                "2023-05-20 07:17:06",
                "2023-05-20 07:17:37",
                "2023-05-20 07:18:07",
                "2023-05-20 07:18:38",
                "2023-05-20 07:19:08",
                "2023-05-20 07:19:38",
                "2023-05-20 07:20:09",
                "2023-05-20 07:21:10",
                "2023-05-20 07:21:40",
                "2023-05-20 07:22:11",
                "2023-05-20 07:22:42",
                "2023-05-20 07:23:42",
                "2023-05-20 07:24:13",
                "2023-05-20 07:24:44",
                "2023-05-20 07:25:14",
                "2023-05-20 07:25:45",
                "2023-05-20 07:26:15",
                "2023-05-20 07:26:46",
                "2023-05-20 07:27:16",
                "2023-05-20 07:27:47",
                "2023-05-20 07:28:17",
                "2023-05-20 07:28:48",
                "2023-05-20 07:29:18",
                "2023-05-20 07:29:48",
                "2023-05-20 07:30:50",
                "2023-05-20 07:31:20",
                "2023-05-20 07:31:51",
                "2023-05-20 07:32:21",
                "2023-05-20 07:32:52",
                "2023-05-20 07:33:22",
                "2023-05-20 07:33:53",
                "2023-05-20 07:34:23",
                "2023-05-20 07:34:54",
                "2023-05-20 07:35:24",
                "2023-05-20 07:35:55",
                "2023-05-20 07:36:26",
                "2023-05-20 07:36:56",
                "2023-05-20 07:37:27",
                "2023-05-20 07:37:57",
                "2023-05-20 07:38:28",
                "2023-05-20 07:38:58",
                "2023-05-20 07:39:29",
                "2023-05-20 07:40:30",
                "2023-05-20 07:41:01",
                "2023-05-20 07:41:31",
                "2023-05-20 07:42:02",
                "2023-05-20 07:42:32",
                "2023-05-20 07:43:33",
                "2023-05-20 07:44:03",
                "2023-05-20 07:45:04",
                "2023-05-20 07:45:35",
                "2023-05-20 07:46:05",
                "2023-05-20 07:46:36",
                "2023-05-20 07:47:06",
                "2023-05-20 07:47:18",
                "2023-05-20 07:47:37",
                "2023-05-20 07:48:07",
                "2023-05-20 07:48:22",
                "2023-05-20 07:48:38",
                "2023-05-20 07:48:52",
                "2023-05-20 07:49:08",
                "2023-05-20 07:49:38",
                "2023-05-20 07:49:54",
                "2023-05-20 07:50:09",
                "2023-05-20 07:50:24",
                "2023-05-20 07:50:40",
                "2023-05-20 07:50:54",
                "2023-05-20 07:51:10",
                "2023-05-20 07:51:41",
                "2023-05-20 07:51:56",
                "2023-05-20 07:52:12",
                "2023-05-20 07:52:28",
                "2023-05-20 07:52:42",
                "2023-05-20 07:52:58",
                "2023-05-20 07:53:12",
                "2023-05-20 07:53:43",
                "2023-05-20 07:54:00",
                "2023-05-20 07:54:13",
                "2023-05-20 07:54:32",
                "2023-05-20 07:54:43",
                "2023-05-20 07:55:04",
                "2023-05-20 07:55:14",
                "2023-05-20 07:55:45",
                "2023-05-20 07:56:08",
                "2023-05-20 07:56:15",
                "2023-05-20 07:57:10",
                "2023-05-20 07:57:16",
                "2023-05-20 07:57:40",
                "2023-05-20 07:57:47",
                "2023-05-20 07:58:10",
                "2023-05-20 07:58:17",
                "2023-05-20 07:58:42",
                "2023-05-20 07:58:48",
                "2023-05-20 07:59:12",
                "2023-05-20 07:59:18",
                "2023-05-20 07:59:44",
                "2023-05-20 07:59:48",
                "2023-05-20 08:00:14",
                "2023-05-20 08:00:19",
                "2023-05-20 08:01:16",
                "2023-05-20 08:01:20",
                "2023-05-20 08:01:46",
                "2023-05-20 08:02:18",
                "2023-05-20 08:02:48",
                "2023-05-20 08:03:18"
        };

        QueryKnnHisParam param=new QueryKnnHisParam(ps,ts);
        historicalKNNExpService.setup(param.getPoints(),k);
        historicalKNNExpService.getTopKTrips();
        List<RealtimeKNNExpService.resItem> res = historicalKNNExpService.get_res();
        System.out.println("==============================================================\n");
        System.out.println("Rank |                   TripID                   | Similarity\n");
        for(int i=0;i<res.size();i++){
            System.out.println(res.get(i).getRank()+"        "+res.get(i).getBusId()+"              "+res.get(i).getSim());
        }
        System.out.println("==============================================================\n");
    }
}
